import os
import logging
import uvloop
from telegram.ext import Application, CommandHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ uvloop –¥–ª—è asyncio
uvloop.install()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text("üõ†Ô∏è –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Fly.io!")

async def post_init(application):
    """–î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

def main():
    try:
        # –°–æ–∑–¥–∞–µ–º Application —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è Fly.io
        application = Application.builder() \
            .token(os.getenv("TELEGRAM_TOKEN")) \
            .post_init(post_init) \
            .build()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CommandHandler("start", start))

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling...")
        application.run_polling(
            close_loop=False,  # –í–∞–∂–Ω–æ –¥–ª—è Fly.io!
            drop_pending_updates=True
        )

    except Exception as e:
        logger.critical(f"–û—à–∏–±–∫–∞: {e}", exc_info=True)
        raise

if __name__ == "__main__":
    main()